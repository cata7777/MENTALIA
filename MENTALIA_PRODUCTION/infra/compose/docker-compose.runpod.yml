version: '3.8'

services:
  # API Gateway
  api-gateway:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth
      - chat-mentalia
      - oraculo-core
      - salud-agenda
      - legal-core
    networks:
      - frontend
      - backend

  # Base de datos Ãºnica para LAB
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-schemas.sql:/docker-entrypoint-initdb.d/init-schemas.sql
    ports:
      - "5432:5432"
    networks:
      - backend

  # Redis para eventos
  bus:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  # Core Services
  auth:
    build: ../../core/auth
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=bus
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - db
      - bus
    networks:
      - backend

  chat-mentalia:
    build: ../../core/chat-mentalia
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_HOST=bus
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
      - bus
    networks:
      - backend
    # GPU para RunPod (opcional)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${GPU_COUNT:-0}
              capabilities: [gpu]

  # Servicios de dominio
  oraculo-core:
    build: ../../oraculo/services/oraculo-core
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=bus
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - bus
    networks:
      - backend

  salud-agenda:
    build: ../../salud-mental/services/salud-agenda
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=bus
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - db
      - bus
    networks:
      - backend

  legal-core:
    build: ../../legal/services/legal-core
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CHILECOMPRA_API_KEY=${CHILECOMPRA_API_KEY}
      - REDIS_HOST=bus
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - db
      - bus
    networks:
      - backend

  # Frontend (opcional en LAB)
  frontend:
    build: ../../frontend
    environment:
      - NEXT_PUBLIC_API_BASE=http://api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - frontend

networks:
  frontend:
  backend:

volumes:
  postgres_data:
  redis_data:
